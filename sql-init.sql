abbtech

CREATE TABLE STUDENT
(
    ID                  SERIAL PRIMARY KEY,
    NAME                VARCHAR(100) NOT NULL,
    SCHOLAR_SHIP_AMOUNT NUMERIC(19, 2),
    USERNAME            VARCHAR(100) NOT NULL CONSTRAINT CONST_UNIQ_STUDENT_USERNAME UNIQUE,
    PASSWORD            VARCHAR(250) NOT NULL
);


CREATE TABLE STUDENT_DETAIL
(
    ID         SERIAL PRIMARY KEY,
    ADDRESS    VARCHAR(100) NOT NULL,
    PHONE      VARCHAR(10)  NOT NULL CONSTRAINT CONST_STUDENT_DETAIL_PHONE_CHECK CHECK (LENGTH((PHONE)::TEXT) = 10),
    CITY       VARCHAR(50),
    STUDENT_ID INTEGER NOT NULL,
    CONSTRAINT FK_STUDENT_DETAIL_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID)
);


CREATE TABLE STUDENT_LESSON_GRADE
(
    ID         SERIAL PRIMARY KEY,
    GRADE      NUMERIC(5, 2),
    STUDENT_ID INTEGER NOT NULL,
    CONSTRAINT FK_STUDENT_LESSON_GRADE_STUDENT FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT(ID)
);


CREATE TABLE CLASS
(
    ID   SERIAL PRIMARY KEY,
    NAME VARCHAR(100)
);


CREATE TABLE STUDENT_CLASS
(
    ID   SERIAL PRIMARY KEY,
    CLASS_ID   INTEGER NOT NULL,
    STUDENT_ID INTEGER NOT NULL,
    CONSTRAINT FK_STUDENT_CLASS_CLASS FOREIGN KEY (CLASS_ID) REFERENCES CLASS(ID),
    CONSTRAINT FK_STUDENT_CLASS_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID)
);


CREATE TABLE ROLE
(
    ID   SERIAL  PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL
);


CREATE TABLE STUDENT_ROLE
(
    ID   SERIAL PRIMARY KEY,
    ROLE_ID   INTEGER NOT NULL,
    STUDENT_ID INTEGER NOT NULL,
    CONSTRAINT FK_STUDENT_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID),
    CONSTRAINT FK_STUDENT_ROLE_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID)
);

INSERT INTO ROLE(NAME) VALUES ('STUDENT_ROLE'),('SUPER_STUDENT_ROLE');

ALTER TABLE STUDENT OWNER TO POSTGRES;
ALTER TABLE STUDENT_DETAIL OWNER TO POSTGRES;
ALTER TABLE STUDENT_LESSON_GRADE OWNER TO POSTGRES;
ALTER TABLE CLASS OWNER TO POSTGRES;
ALTER TABLE STUDENT_CLASS  OWNER TO POSTGRES;
ALTER TABLE ROLE OWNER TO POSTGRES;
ALTER TABLE STUDENT_ROLE OWNER TO POSTGRES;
